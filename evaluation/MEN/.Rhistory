5+5
"lol"
r <- "lol"
r
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
getwd()
dat <- read.csv('disruptions-2019-Q4.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
getwd()
dat <- read.csv('disruptions-2019-Q4.csv')
# turn data into a tibble, which is what the tidyverse works with
dat.tib <- as_tibble(dat)
dat.tib <- dplyr::mutate(dat.tib, duration_hours = duration_minutes / 60)
dplyr::select(dat.tib, duration_hours)
```Ã¾
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
getwd()
dat <- read.csv('disruptions-2019-Q4.csv')
# turn data into a tibble, which is what the tidyverse works with
dat.tib <- as_tibble(dat)
dat.tib <- dplyr::mutate(dat.tib, duration_hours = duration_minutes / 60)
dplyr::select(dat.tib, duration_hours)
dplyr::count(dat.tib, cause_group)
dat.tib.2 <- dplyr::filter(dat.tib, cause_group != "unknown" & duration_hours < 20)
ggplot(data = dat.tib.2, xlab= "duration in hours") +
geom_histogram(binwidth = 0.25, mapping = aes(x = duration_hours)) +
ggtitle("Histogram of delay times (bin = 15 minutes, cases = 1478)") +
xlab("duration in hours")
dat.tib.2 %>% group_by(cause_group) %>%
summarise("average delay duration in hours" = mean(duration_hours))
table4a <- tibble(
`country` = c("Afghanistan", "Brazil", "China"),
`1999` = c(745, 37737, 212258),
`2000` = c(2666, 80488, 213766)
)
table4a %>% gather('1999', '2000', key="year", value = "cases")
knitr::opts_chunk$set(echo = TRUE)
require(ROCR)
# Make sure you adjust the path in read.table to align with where
# you have stored the data file decision.dat
dat<-read.table("decision.dat",header=T)
subj8 <- dat[dat$subjNo==8,]
is.factor(dat$isDots)
dat$isDots <- as.factor(dat$isDots)
dat$cohFac <- as.factor(dat$cohFac)
is.factor(dat$isDots)
is.factor(dat$cohFac)
mod <- glm(ER ~ RT + isDots + isLeft + cohFac + blocknum,data=subj8,
family=binomial(link="logit"))
summary(mod)
# turn the regression coefficients into odds
exp(cbind(Odds_Ratio=coef(mod),confint(mod)))
anova(mod,test="Chisq")
knitr::opts_chunk$set(echo = TRUE)
require(ROCR)
library(ROCR)
p <- predict(mod,type="response")
pr <- prediction(p,subj8$ER)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
subj8
dat$cohFac <- as.factor(dat$cohFac)
dat$isDots <- as.factor(dat$isDots)
mod <- glm(ER ~ RT + isDots + isLeft + cohFac + blocknum,data=subj8,
family=binomial(link="logit"))
summary(mod)
# turn the regression coefficients into odds
exp(cbind(Odds_Ratio=coef(mod),confint(mod)))
anova(mod,test="Chisq")
View(dat)
(-1.23*0.5)/(1+(-1.23*0.5)-0.5)
(0.3*0.5)/(1+0.3*0.5-0.5)
library("ggpubr")
?ggpubr
??ggpubr
install.packages("ggpubr")
myModel.step <- stepAIC(mod, trace=3)
install.packages("MASS")
library("MASS")
myModel.step<-stepAIC(mod, trace=3)
myModel.step$anova
mod2 <- glm(ER ~ RT + isDots + isLeft + cohFac + blocknum + cohFac*isDots,data=subj8,
family=binomial(link="logit"))
myModel2.step<-stepAIC(mod2, trace=3)
myModel2.step$anova
summary(mod2)
# turn the regression coefficients into odds
exp(cbind(Odds_Ratio=coef(mod),confint(mod2)))
anova(mod2,test="Chisq")
(0.02164326*0.5)/(1+0.02164326*0.5 -0.5)
mod2 <- glm(ER ~ RT + isDots + isLeft + cohFac + blocknum + cohFac*isDots,data=subj8,
family=binomial(link="logit"))
p <- predict(mod2,type="response")
pr <- prediction(p,subj8$ER)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
library("MASS")
myModel.step<-stepAIC(mod,trace=3)
myModel.step$anova
install.packages('shiny')
tinytex::install_tinytex()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("/School")
setwd("School/bachelorproject/code")
setwd("MEN")
read.delim("MEN_dataset_lemma_form", header=FALSE)
read.delim("MEN_dataset_lemma_form.DEV", header=FALSE)
read.delim("MEN_dataset_lemma_form.DEV", header=FALSE, sep = " ")
MENdata = read.delim("MEN_dataset_lemma_form.DEV", header=FALSE, sep = " ")
View(MENdata)
View(peepeepoopoo)
View(peepeepoopoo)
MENdata = read.delim("MEN_dataset_lemma_form_full", header=FALSE, sep = " ")
MENdata = read.delim("MEN_dataset_natural_form_full", header=FALSE, sep = " ")
